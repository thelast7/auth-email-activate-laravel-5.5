<?php

namespace App\Http\Controllers\Backend;

use App\Product;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Yajra\Datatables\Datatables;
use Intervention\Image\Facades\Image;
use Auth;

class ProductsController extends BackendController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('backend.products.index');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('backend.products.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $this->validate($request, [
            'category_id' => 'required',
            'name'        => 'required',
            'description' => 'required',
            'status'      => 'required',
            'cover'       => 'required',
        ]);
        $product = new Product();
            if ($request->file('cover')) {
                $file           = $request->file('cover');
                $filename       = time().'.'.$file->getClientOriginalExtension();
                $location       = public_path('/product');
                $file->move($location, $filename);
                $product->cover  = $filename;
            }
        $request['user_id'] = $request->user()->id;
        $request['slug'] = str_slug($request->get('name'), '-');
        Product::create($request->all());


        return redirect()->route('backend.products.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Product  $product
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $product = Product::findOrFail($id);
        return view('backend.products.show', compact('product'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Product  $product
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $product = Product::findOrFail($id);
        return view('backend.products.edit', compact('product'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Product  $product
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $this->validate($request, [
            'category_id' => 'required',
            'name' => 'required|string|min:5|unique:products,name,' . $id,
            'description' => 'required',
            'status' => 'required',
        ]);
        $request['slug'] = str_slug($request->get('name'), '-');

        $product = Product::findOrFail($id);
        $product->update($request->all());

        return redirect()->route('backend.products.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Product  $product
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        if (! Product::destroy($id)) return redirect()->back();
            return redirect()->route('backend.products.index');
    }

    public function dataTable()
    {
        $products = Product::query();
        return DataTables::of($products)
            ->addColumn('penjual', function ($products) {
                return $products->user->name;
            })
            ->addColumn('category', function ($products) {
                return $products->category->name;
            })
            ->addColumn('action', function ($products) {
                return view('backend.partials._action', [
                    'model' => $products,
                    'show_url' => route('backend.products.show', $products->id),
                    'edit_url' => route('backend.products.edit', $products->id),
                    'delete_url' => route('backend.products.destroy', $products->id)
                ]);
            })
            ->rawColumns(['action'])
            ->make(true);
    }
}
